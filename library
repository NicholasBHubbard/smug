(defpackage :drewc.org/smug/library
  (:nicknames :smug/library)
  (:use :cl)
  (:import-from :interface)
  (:import-from :interface/monad
		#:mlet*
		#:bind
		#:result
		#:fail)
  (:import-from :drewc.org/smug/parser
		#:<parser>
		#:input
		#:item))

(in-package :drewc.org/smug/library)

(interface:define-interface <parser-library> 
    (parser)
  ()
  (:singleton)
  (:generic satisfies (<parser> predicate)))

(defmethod input ((<p> <parser>))
  "The INPUT is simply the <STATE>s STATE."
  (update <p> #'identity))

(defmethod (setf input) (value (<p> <parser>))
  (update <p> (lambda (state) 
		(declare (ignore state)) value)))

(defmethod item ((<p> <parser>))
  (bind 
   <p> (input <p>)
   (lambda (input)
     (if (input-empty-p (parser-input-interface <p>) input)
	 (fail <p>)
	 (bind 
	  <p> (setf (input <p>) 
		    (input-rest 
		     (parser-input-interface <p>) input))
	 (constantly 
	  (result <p>
	   (input-first 
	    (parser-input-interface <p>) input))))))))
